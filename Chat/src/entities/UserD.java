package entities;
// Generated 26 Nov, 2016 2:48:47 PM by Hibernate Tools 5.2.0.Beta1

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * UserD generated by hbm2java
 */
@Entity
@Table(name = "UserD", catalog = "ChatSys")
public class UserD implements java.io.Serializable {

	private int userId;
	private String userName;
	private Set<Groupusers> groupuserses = new HashSet<Groupusers>(0);
	private Set<RegDet> regDets = new HashSet<RegDet>(0);
	private Set<UserContact> userContactsForUserId = new HashSet<UserContact>(0);
	private Set<UserContact> userContactsForUserContactId = new HashSet<UserContact>(0);
	private Set<Authenticate> authenticates = new HashSet<Authenticate>(0);

	public UserD() {
	}

	public UserD(int userId) {
		this.userId = userId;
	}

	public UserD(int userId, String userName, Set<Groupusers> groupuserses, Set<RegDet> regDets,
			Set<UserContact> userContactsForUserId, Set<UserContact> userContactsForUserContactId,
			Set<Authenticate> authenticates) {
		this.userId = userId;
		this.userName = userName;
		this.groupuserses = groupuserses;
		this.regDets = regDets;
		this.userContactsForUserId = userContactsForUserId;
		this.userContactsForUserContactId = userContactsForUserContactId;
		this.authenticates = authenticates;
	}

	@Id
	@GeneratedValue (strategy = GenerationType.IDENTITY)
	@Column(name = "userId", unique = true, nullable = false)
	public int getUserId() {
		return this.userId;
	}

	public void setUserId(int userId) {
		this.userId = userId;
	}

	@Column(name = "userName")
	public String getUserName() {
		return this.userName;
	}

	public void setUserName(String userName) {
		this.userName = userName;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "userD")
	public Set<Groupusers> getGroupuserses() {
		return this.groupuserses;
	}

	public void setGroupuserses(Set<Groupusers> groupuserses) {
		this.groupuserses = groupuserses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "userD")
	public Set<RegDet> getRegDets() {
		return this.regDets;
	}

	public void setRegDets(Set<RegDet> regDets) {
		this.regDets = regDets;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "userDByUserId")
	public Set<UserContact> getUserContactsForUserId() {
		return this.userContactsForUserId;
	}

	public void setUserContactsForUserId(Set<UserContact> userContactsForUserId) {
		this.userContactsForUserId = userContactsForUserId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "userDByUserContactId")
	public Set<UserContact> getUserContactsForUserContactId() {
		return this.userContactsForUserContactId;
	}

	public void setUserContactsForUserContactId(Set<UserContact> userContactsForUserContactId) {
		this.userContactsForUserContactId = userContactsForUserContactId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "userD")
	public Set<Authenticate> getAuthenticates() {
		return this.authenticates;
	}

	public void setAuthenticates(Set<Authenticate> authenticates) {
		this.authenticates = authenticates;
	}

}
